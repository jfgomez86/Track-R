module TrackR
  class TrackR::Token
    def initialize(options = {})
      @token = case
               when options.include?(:token)
                 options[:token]
               when options.include?(:username) &&
                 options.include?(:password)
                 # If a token is not provided, it can be generated by passing a
                 # hash with :user and :password keys
                 get_token(options[:username],
                           options[:password]
                          )
               else
                 raise ArgumentError, "Invalid argument, expecting either <:token> or <:username> and <:password>"
               end
    end

    def to_s
      @token
    end

    protected

    # According to http://www.pivotaltracker.com/help/api#retrieve_token this should work:
    def get_token(username, password)
      (Hpricot(open("https://www.pivotaltracker.com/services/tokens/active", :http_basic_authentication => [username, password])).at('guid')).inner_html
    end

  end # class TrackR::Tracker::TrackR::Token
end
